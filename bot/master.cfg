# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *
import lib

builds =  [ x for x in dir(lib) if "__" not in x ]
print "===Build List: ", builds

c = BuildmasterConfig = {}

####### WORKERS

c['workers'] = [worker.Worker("master-worker", "pass"), \
worker.Worker("ceph1-worker", "pass"), \
worker.Worker("ceph2-worker", "pass"), \
worker.Worker("ceph3-worker", "pass"), \
worker.Worker("stordeb-worker", "pass"), \
worker.Worker("kansu-worker", "pass"), \
worker.Worker("stortest1-worker", "pass") \
]

c['protocols'] = {'pb': {'port': 9989}}


####### CHANGE_SOURCE

def Change():
        change = []
        for b in builds:
                c="builder = lib."+b+".Builder()"
                exec(c)
                if hasattr(builder, 'change'):
                        ch = builder.change()
                        change.append(ch)
        return change
c['change_source'] = Change()
print "===c['change_source']: ", c['change_source']



####### SCHEDULERS

def Scheduler():
        scheduler = []
        for b in builds:
                c="builder = lib."+b+".Builder()"
                exec(c)
		if hasattr(builder, 'scheduler'):
                        s = builder.scheduler()
                        for si in s:
                                scheduler.append(si)
        return scheduler
c['schedulers'] = Scheduler()
print "===c['schedulers']: ", c['schedulers']

####### BUILDERS

def Build():
        build = []
        for b in builds:
                c="builder = lib."+b+".Builder()"
                exec(c)
                if hasattr(builder, 'build'):
                        b = builder.build()
                        build.append(b)
        return build
c['builders'] = Build()
print "===c['builders']: ", c['builders']


 


####### STATUS TARGETS

c['status'] = []

####### PROJECT IDENTITY

c['title'] = "Workdir Software StorBox Project"
c['titleURL'] = "http://master:8010/"
c['buildbotURL'] = "http://master:8010/"

                
from buildbot.plugins import util


                                
from twisted.cred import strcred
c['www'] = dict(port=8010, allowed_origins=["*"],
				plugins=dict(waterfall_view={}, console_view={}),
                )
# Email notifications
from buildbot.plugins import reporters

c['services'] = []

mn = reporters.MailNotifier(fromaddr="buildbot@botsoftware.com",
                           extraRecipients=["kansukse@gmail.com",],
                           sendToInterestedUsers=False)
c['services'].append(mn)

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}
